# Coursework Summarizer Project Structure

files:
  document_loader.py:
    description: |
      Handles document loading, text extraction, chunking, and code/image block extraction.
      - Supported formats: PDF, TXT, DOCX
      - Uses LangChain loaders and text splitter
      - Returns chunked documents with metadata for summarization
    functions:
      - extract_code_and_images: Extracts code blocks and image references from text
      - extract: Loads document, splits into chunks, attaches code/image metadata

  summarizer.py:
    description: |
      Performs clustering and summarization of document chunks using LLMs and embeddings.
      - Uses EmbeddingsClusteringFilter for topic grouping
      - Summarizes clusters with a custom prompt (preserves code/images)
      - Returns formatted summary text
    functions:
      - summarize_document_with_kmeans_clustering: Clusters and summarizes chunked documents

  api_server.py:
    description: |
      Provides a REST API (FastAPI) to trigger document summarization from external clients.
      - Accepts file path or file upload
      - Allows chunk size and cluster number to be set via API
      - Returns summary as JSON
    endpoints:
      - /summarize: Accepts file path, chunk size, num_clusters; returns summary
      - /summarize/upload: Accepts file upload; returns summary
    dependencies:
      - Imports summarizer and document_loader modules
      - Sets up LLM and embeddings for each request

notes:
  - All files are modular and can be reused in CLI, API, or other workflows.
  - Extend document_loader.py to support more formats if needed.
  - Summaries include code blocks and image/graph references when present.
  - API server can be run with: uvicorn api_server:app --reload
